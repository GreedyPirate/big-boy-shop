<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.sina.core.dao.product.BrandDao">
	
	<!-- sql优化 start 根据页面要使用的字段来查询，即select fields from　bbs_brand,fields为变量-->
	<sql id="brandSelector">
		select
		<if test="fields != null">
			${fields}
		</if>
		<if test="fields == null">
			*
		</if>
		from bbs_brand
	</sql>
	
	<!-- where语句，包括name的模糊查询 -->
	<sql id="brandWhere">
		<where>
			<if test="id !=null">
				id = #{id}
			</if>
			<if test="isDisplay !=null">
				and is_display = #{isDisplay}
			</if>
			<if test="name !=null">
				<!-- false必须放前面 -->
				<if test="nameLike == false">
					and name = #{name}
				</if>
				<if test="nameLike == true">
					and name like "%"#{name}"%"
				</if>
			</if>
		</where>
	</sql>
	
	<!-- orderBy语句 -->
	<sql id="brandOrderBy">
		<if test="orderFields !=null and orderFields.size > 0">
			orderBy
			<foreach collection="orderFields" item="order" separator=",">
				${order.fieldName} ${order.order}
			</foreach>
		</if>
	</sql>
	
	<sql id="brandLimit">
		<if test="startRow != null">
			limit #{startRow},#{pageSize}
		</if>
	</sql>
	<!-- sql优化 end -->


	<resultMap type="Brand" id="showBrand">
		<id column="id" property="id"/>
		<result column="name" property="name"/>
		<result column="description" property="description"/>
		<result column="img_url" property="imgUrl"/>
		<result column="sort" property="sort"/>
		<result column="is_display" property="isDisplay"/>
	</resultMap>

	<!-- 查询品牌集合 -->
	<select id="getBrandList" parameterType="BrandQuery" resultMap="showBrand">
		<include refid="brandSelector"/>
		<include refid="brandWhere"/>
		<include refid="brandOrderBy"/>
		<include refid="brandLimit"/>
	</select>
	
	
	<!-- 查询品牌   get*   -->
	<!-- 因为不查询webSite，导致查询结果和Brand不是一一对应，所以用resultMap,反之应该用resultType -->
	<select id="getBrandWithPage" parameterType="Brand" resultMap="showBrand">
		select id , name ,description,img_url,sort,is_display
		from bbs_brand
		<where>
			<if test="isDisplay != null">
				is_display = #{isDisplay}
			</if>
			<if test="name != null">
				and name = #{name}
			</if>
		</where>
		order by id desc
		limit #{startRow},#{pageSize}
	</select>
	
	<!-- 查询分页要使用到的总记录数 -->
	<select id="getBrandCount" parameterType="Brand" resultType="Integer">
		select count(1) from bbs_brand
		<where>
			<if test="isDisplay != null">
				is_display = #{isDisplay}
			</if>
			<if test="name != null">
				and name = #{name}
			</if>
		</where>
	</select>
	
	<!-- 添加品牌 -->
	<insert id="addBrand" parameterType="Brand">
		insert into bbs_brand
		<trim prefix="(" suffix=")">
			name,description,img_url,web_site,sort,is_display
		</trim>
		values
		<trim prefix="(" suffix=")">
			#{name},#{description},#{imgUrl},#{webSite},#{sort},#{isDisplay}
		</trim>
	</insert>
	
	<!-- 删除单个品牌 -->
	<delete id="deleteBrandByKey" parameterType="Integer">
		delete from bbs_brand
		<where>
		 id = #{id}
		</where>
	</delete>
	
	<!-- 批量删除品牌 -->
	<delete id="deleteBrandsByIds" parameterType="Integer">
		delete from bbs_brand
		<where>
			id in
			<foreach collection="array" open="(" close=")" item="id" separator=",">
				<!-- 这里的id是item的id collection是要遍历数据的类型-->
				#{id}
			</foreach>
		</where>
	</delete>
	
	<!-- 根据主键id查询品牌 这里要使用的是resultMap，注意字段不对应-->
	<select id="getBrandById" parameterType="Integer" resultMap="showBrand">
		select id,name,description,img_url,sort,is_display from bbs_brand
		<where>
			id = #{id}
		</where>
	</select>
	
	<!-- 更新品牌 -->
	<update id="updateBrand" parameterType="Brand">
		update bbs_brand 
		<set>
			<if test="name != null">
				name=#{name},
			</if>
			<if test="description != null">
				description=#{description},
			</if>
			<if test="imgUrl != null">
				img_url=#{imgUrl},
			</if>
			<if test="sort != null">
				sort=#{sort},
			</if>
			<if test="isDisplay != null">
				is_display=#{isDisplay}
			</if>
			<where>
				id = #{id}
			</where>
		</set>
	</update>
</mapper>